{"ast":null,"code":"var _jsxFileName = \"/Users/aditi/Desktop/BB_Latest_2.0/BudgetBusters/bb_frontend/src/components/auth/Login.jsx\",\n  _s = $RefreshSig$();\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport React, { useState } from 'react';\nimport { auth } from \"../../firebase\";\nimport logo from \"../../BBLogo.png\";\nimport { signInWithGoogle } from \"../../firebase\";\n//import { withRouter } from 'react-router-dom';\n//import { useHistory } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport GoogleSignInButton from '../GoogleSignInButton';\nimport { resetPassword } from \"../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = props => {\n  _s();\n  //const history = useHistory();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [displayMessage, setDisplayMessage] = useState('');\n  const [isSent, setIsSent] = useState(false);\n  const loginSubmit = e => {\n    // todo: sign in\n    e.preventDefault();\n    signInWithEmailAndPassword(auth, email, password).then(userCredential => {\n      console.log(userCredential);\n      //const successMessage = \"You have successfully logged in!\";\n      //showMessage(successMessage);\n      // maybe show a success message on home, like 'successfully logged in as ''\n\n      // successful login\n      // direct user to home page\n      navigate('/home');\n    }).catch(error => {\n      console.log(`showing the error: ${error}`);\n      showMessage(error);\n    });\n  };\n\n  /* function to display appropriate UI messages based on user input */\n  const showMessage = error => {\n    if (error && error.message) {\n      // handle firebase errors\n      const match = error.message.match(/\\(([^)]+)\\)/);\n      switch (error.message.match(/\\(([^)]+)\\)/)[1]) {\n        // diff firebase errors:\n        case 'auth/invalid-email':\n          setDisplayMessage(\"Please enter a valid email!\");\n          break;\n        case 'auth/invalid-login-credentials':\n          setDisplayMessage(\"Please enter the correct credentials\");\n          break;\n\n        // case 'auth/missing-email':\n        //     break;\n\n        case 'auth/missing-password':\n          setDisplayMessage(\"Please enter your password!\");\n          break;\n        default:\n          setDisplayMessage(\"An error occurred. Please try again.\");\n      }\n    } else {\n      // non-firebase errors/message\n      setDisplayMessage(\"An error occurred. Please try again.\");\n      // successful login\n      // if (error === \"You have successfully logged in!\") {\n      //     setDisplayMessage(error);\n      // } else {\n      //     setDisplayMessage(\"An error occurred. Please try again.\");\n      // }\n    }\n  };\n\n  const handleResetPassword = () => {\n    console.log(\"clicked on reset password link\");\n    //console.log(\"here's the email: \" + email);\n    resetPassword(email)\n    // console.log(\"here's the email: \" + email);\n    .then(() => {\n      console.log(\"here's the email: \" + email);\n      setIsSent(true);\n    }).catch(error => {\n      // Handle error, e.g., display an error message to the user\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: loginSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        type: \"email\",\n        placeholder: \"email@emailprovider.com\",\n        id: \"email\",\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        type: \"password\",\n        placeholder: \"enter password\",\n        id: \"password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: loginSubmit,\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: displayMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"link-btn\",\n      onClick: () => navigate('/register'),\n      children: \" Don't have an account? Register here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"link-btn\",\n      onClick: handleResetPassword,\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GoogleSignInButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"LgbWHjxt+YBcHWMqjOM4KeRGHQ8=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["signInWithEmailAndPassword","React","useState","auth","logo","signInWithGoogle","useNavigate","GoogleSignInButton","resetPassword","jsxDEV","_jsxDEV","Login","props","_s","navigate","email","setEmail","password","setPassword","displayMessage","setDisplayMessage","isSent","setIsSent","loginSubmit","e","preventDefault","then","userCredential","console","log","catch","error","showMessage","message","match","handleResetPassword","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","value","onChange","target","type","placeholder","id","name","onClick","_c","$RefreshReg$"],"sources":["/Users/aditi/Desktop/BB_Latest_2.0/BudgetBusters/bb_frontend/src/components/auth/Login.jsx"],"sourcesContent":["import { signInWithEmailAndPassword } from \"firebase/auth\";\nimport React, { useState } from 'react';\nimport { auth } from \"../../firebase\";\nimport logo from \"../../BBLogo.png\";\nimport { signInWithGoogle } from \"../../firebase\";\n//import { withRouter } from 'react-router-dom';\n//import { useHistory } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport GoogleSignInButton from '../GoogleSignInButton';\nimport { resetPassword } from \"../../firebase\";\n\nconst Login = (props) => {\n    //const history = useHistory();\n    const navigate = useNavigate();\n    const [email, setEmail ] = useState('');\n    const [password, setPassword] = useState('');\n    const [displayMessage, setDisplayMessage ] = useState('');\n    const [isSent, setIsSent] = useState(false);\n\n    const loginSubmit = (e) => {\n        // todo: sign in\n        e.preventDefault();\n        signInWithEmailAndPassword(auth, email, password)\n            .then((userCredential) => {\n                console.log(userCredential);\n                //const successMessage = \"You have successfully logged in!\";\n                //showMessage(successMessage);\n                // maybe show a success message on home, like 'successfully logged in as ''\n\n                // successful login\n                // direct user to home page\n                navigate('/home');\n            })\n            .catch((error) => {\n                console.log(`showing the error: ${error}`);\n                showMessage(error);\n            })\n    }\n\n    /* function to display appropriate UI messages based on user input */\n    const showMessage = (error) => {\n        if (error && error.message) {\n            // handle firebase errors\n            const match = error.message.match(/\\(([^)]+)\\)/);\n\n            switch (error.message.match(/\\(([^)]+)\\)/)[1]) {\n                // diff firebase errors:\n                case 'auth/invalid-email':\n                    setDisplayMessage(\"Please enter a valid email!\");\n                    break;\n\n                case 'auth/invalid-login-credentials':\n                    setDisplayMessage(\"Please enter the correct credentials\");\n                    break;\n\n                // case 'auth/missing-email':\n                //     break;\n\n                case 'auth/missing-password':\n                    setDisplayMessage(\"Please enter your password!\");\n                    break;\n\n                default:\n                    setDisplayMessage(\"An error occurred. Please try again.\");\n            }\n        } else {\n            // non-firebase errors/message\n            setDisplayMessage(\"An error occurred. Please try again.\");\n            // successful login\n            // if (error === \"You have successfully logged in!\") {\n            //     setDisplayMessage(error);\n            // } else {\n            //     setDisplayMessage(\"An error occurred. Please try again.\");\n            // }\n        }\n    };\n\n\n    const handleResetPassword = () => {\n        console.log(\"clicked on reset password link\");\n        //console.log(\"here's the email: \" + email);\n        resetPassword(email)\n            // console.log(\"here's the email: \" + email);\n            .then(() => {\n                console.log(\"here's the email: \" + email);\n                setIsSent(true);\n            })\n            .catch((error) => {\n                // Handle error, e.g., display an error message to the user\n            });\n    };\n\n    return (\n\n        <div className=\"auth-form-container\">\n            <h2>Login</h2>\n            <form className=\"login-form\" onSubmit={loginSubmit}>\n                <label htmlFor=\"email\">Email</label>\n                <input value={email} onChange={(e) => setEmail(e.target.value)}type=\"email\" placeholder=\"email@emailprovider.com\" id=\"email\" name=\"email\" />\n\n                <label htmlFor=\"password\">Password</label>\n                <input value={password} onChange={(e) => setPassword(e.target.value)}type=\"password\" placeholder=\"enter password\" id=\"password\" name=\"password\" />\n\n                <button type=\"submit\" onClick={loginSubmit}>Log In</button>\n\n                {<p>{displayMessage}</p>}\n            </form>\n            <button className=\"link-btn\" onClick={() => navigate('/register')}> Don't have an account? Register here.</button>\n            <button className=\"link-btn\" onClick = { handleResetPassword }>Reset Password</button>\n\n            <GoogleSignInButton/>\n        </div>\n    )\n}\n\nexport default Login"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}