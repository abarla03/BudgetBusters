{"ast":null,"code":"var _jsxFileName = \"/Users/aditi/Desktop/BB_Latest_2.0/BudgetBusters/bb_frontend/src/components/auth/Login.jsx\",\n  _s = $RefreshSig$();\nimport { signInWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\nimport React, { useState, useEffect } from 'react';\nimport { auth } from \"../../firebase\";\nimport logo from \"../../BBLogo.png\";\nimport { signInWithGoogle } from \"../../firebase\";\n//import { withRouter } from 'react-router-dom';\n//import { useHistory } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport GoogleSignInButton from '../GoogleSignInButton';\nimport { resetPassword } from \"../../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  //const history = useHistory();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [displayMessage, setDisplayMessage] = useState('');\n  const [isSent, setIsSent] = useState(false);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(null);\n      }\n    });\n    return () => unsubscribe();\n  }, []);\n  const loginSubmit = async e => {\n    // todo: sign in\n    e.preventDefault();\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n      setUser(user);\n      navigate('/home', {\n        state: {\n          user\n        }\n      });\n    } catch (error) {\n      showMessage(error);\n    }\n  };\n\n  /* function to display appropriate UI messages based on user input */\n  const showMessage = error => {\n    if (error && error.code) {\n      console.error(\"Firebase Error Code:\", error.code);\n      console.error(\"Firebase Error Message:\", error.message);\n      switch (error.code) {\n        case 'auth/invalid-email':\n          setDisplayMessage(\"Please enter a valid email!\");\n          break;\n        case 'auth/wrong-password':\n          setDisplayMessage(\"Incorrect password. Please try again.\");\n          break;\n        case 'auth/user-not-found':\n          setDisplayMessage(\"User not found. Please check your email and try again.\");\n          break;\n        case 'auth/missing-password':\n          setDisplayMessage(\"Please enter your password!\");\n          break;\n        default:\n          setDisplayMessage(\"An error occurred. Please try again.\");\n      }\n    } else {\n      console.error(\"Non-Firebase Error:\", error);\n      setDisplayMessage(\"An error occurred. Please try again.\");\n    }\n  };\n  const handleResetPassword = () => {\n    console.log(\"clicked on reset password link\");\n    //console.log(\"here's the email: \" + email);\n    resetPassword(email)\n    // console.log(\"here's the email: \" + email);\n    .then(() => {\n      console.log(\"here's the email: \" + email);\n      setIsSent(true);\n    }).catch(error => {\n      // Handle error, e.g., display an error message to the user\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: loginSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        type: \"email\",\n        placeholder: \"email@emailprovider.com\",\n        id: \"email\",\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        type: \"password\",\n        placeholder: \"enter password\",\n        id: \"password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: loginSubmit,\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), displayMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: displayMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"link-btn\",\n      onClick: () => navigate('/register'),\n      children: \" Don't have an account? Register here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"link-btn\",\n      onClick: handleResetPassword,\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GoogleSignInButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"Md5f2HruN1X62ihncS3xfzvlUys=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["signInWithEmailAndPassword","onAuthStateChanged","React","useState","useEffect","auth","logo","signInWithGoogle","useNavigate","GoogleSignInButton","resetPassword","jsxDEV","_jsxDEV","Login","_s","navigate","email","setEmail","password","setPassword","displayMessage","setDisplayMessage","isSent","setIsSent","user","setUser","unsubscribe","loginSubmit","e","preventDefault","userCredential","state","error","showMessage","code","console","message","handleResetPassword","log","then","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","value","onChange","target","type","placeholder","id","name","onClick","_c","$RefreshReg$"],"sources":["/Users/aditi/Desktop/BB_Latest_2.0/BudgetBusters/bb_frontend/src/components/auth/Login.jsx"],"sourcesContent":["import { signInWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\nimport React, { useState, useEffect } from 'react';\nimport { auth } from \"../../firebase\";\n\nimport logo from \"../../BBLogo.png\";\nimport { signInWithGoogle } from \"../../firebase\";\n//import { withRouter } from 'react-router-dom';\n//import { useHistory } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport GoogleSignInButton from '../GoogleSignInButton';\nimport { resetPassword } from \"../../firebase\";\n\nconst Login = () => {\n    //const history = useHistory();\n    const navigate = useNavigate();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [displayMessage, setDisplayMessage] = useState('');\n    const [isSent, setIsSent] = useState(false);\n    const [user, setUser] = useState(null);\n\n    useEffect(() => {\n        const unsubscribe = onAuthStateChanged(auth, (user) => {\n            if (user) {\n                setUser(user);\n            } else {\n                setUser(null);\n            }\n        });\n\n        return () => unsubscribe();\n    }, []);\n\n    const loginSubmit = async (e) => {\n        // todo: sign in\n        e.preventDefault();\n\n        try {\n            const userCredential = await signInWithEmailAndPassword(auth, email, password);\n            const user = userCredential.user;\n            setUser(user);\n            navigate('/home', {state: {user}});\n        } catch (error) {\n            showMessage(error);\n        }\n\n    };\n\n    /* function to display appropriate UI messages based on user input */\n    const showMessage = (error) => {\n        if (error && error.code) {\n            console.error(\"Firebase Error Code:\", error.code);\n            console.error(\"Firebase Error Message:\", error.message);\n\n            switch (error.code) {\n                case 'auth/invalid-email':\n                    setDisplayMessage(\"Please enter a valid email!\");\n                    break;\n                case 'auth/wrong-password':\n                    setDisplayMessage(\"Incorrect password. Please try again.\");\n                    break;\n                case 'auth/user-not-found':\n                    setDisplayMessage(\"User not found. Please check your email and try again.\");\n                    break;\n                case 'auth/missing-password':\n                    setDisplayMessage(\"Please enter your password!\");\n                    break;\n                default:\n                    setDisplayMessage(\"An error occurred. Please try again.\");\n            }\n        } else {\n            console.error(\"Non-Firebase Error:\", error);\n            setDisplayMessage(\"An error occurred. Please try again.\");\n        }\n    };\n\n\n    const handleResetPassword = () => {\n        console.log(\"clicked on reset password link\");\n        //console.log(\"here's the email: \" + email);\n        resetPassword(email)\n            // console.log(\"here's the email: \" + email);\n            .then(() => {\n                console.log(\"here's the email: \" + email);\n                setIsSent(true);\n            })\n            .catch((error) => {\n                // Handle error, e.g., display an error message to the user\n            });\n    };\n\n    return (\n\n        <div className=\"auth-form-container\">\n            <h2>Login</h2>\n            <form className=\"login-form\" onSubmit={loginSubmit}>\n                <label htmlFor=\"email\">Email</label>\n                <input value={email} onChange={(e) => setEmail(e.target.value)} type=\"email\"\n                       placeholder=\"email@emailprovider.com\" id=\"email\" name=\"email\"/>\n\n                <label htmlFor=\"password\">Password</label>\n                <input value={password} onChange={(e) => setPassword(e.target.value)} type=\"password\"\n                       placeholder=\"enter password\" id=\"password\" name=\"password\"/>\n\n                <button type=\"submit\" onClick={loginSubmit}>Log In</button>\n\n                {displayMessage && <p>{displayMessage}</p>}\n            </form>\n            <button className=\"link-btn\" onClick={() => navigate('/register')}> Don't have an account? Register here.\n            </button>\n            <button className=\"link-btn\" onClick={handleResetPassword}>Reset Password</button>\n\n            <GoogleSignInButton/>\n        </div>\n    );\n}\n\nexport default Login"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}