{"ast":null,"code":"var _jsxFileName = \"/Users/aditi/Desktop/BB_Latest_2.0/BudgetBusters/bb_frontend/src/components/ManageNotifications.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { auth } from \"../firebase\";\nimport { post, put, get } from \"./ApiClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction SetNotifications() {\n  _s();\n  var _notifObj$notifTime, _notifObj$notifTime2;\n  const user = auth.currentUser;\n  const userEmail = user ? user.email : \"\";\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  const [notifObj, setNotifObj] = useState({});\n  const [notifUpdated, setNotifUpdated] = useState(false); // to re-fetch notifications info whenever update happens\n\n  /* obtaining notification object from user input */\n  useEffect(() => {\n    function fetchNotifData() {\n      let data;\n      try {\n        // Make the GET request to retrieve the budget\n        data = get(`/getNotifications/${userEmail}`);\n      } catch (error) {\n        console.error(\"Error creating or fetching budget:\", error);\n      }\n      return data;\n    }\n    fetchNotifData().then(response => {\n      setNotifObj(response.data);\n    });\n    setNotifUpdated(false);\n    console.log(\"notifObj\", notifObj);\n  }, [userEmail, notifUpdated]);\n\n  /* methods of notification */\n  const [selectedMethods, setSelectedMethods] = useState([]);\n  const [allMethods, setAllMethods] = useState([]);\n  const methods = [\"Email\", \"Text\"];\n\n  /* select time */\n  //time\n  const [selectedHour, setSelectedHour] = useState(notifObj ? (_notifObj$notifTime = notifObj.notifTime) === null || _notifObj$notifTime === void 0 ? void 0 : _notifObj$notifTime.split(\" \")[0] : \"0\");\n  //minute -- no need for this, we will just give them options on the hour (1:00, 2:00, etc.)\n  const [selectedMin, setSelectedMin] = useState(0);\n  const [showMinDropdown, setShowMinDropdown] = useState(false);\n  //am or pm\n  const [selectedPeriod, setSelectedPeriod] = useState(notifObj ? (_notifObj$notifTime2 = notifObj.notifTime) === null || _notifObj$notifTime2 === void 0 ? void 0 : _notifObj$notifTime2.split(\" \")[1] : \"\");\n\n  /* options */\n  const [isOptionEditMode, setIsOptionEditMode] = useState(true);\n  const [warningNotificationChoice, setWarningNotificationChoice] = useState(notifObj ? notifObj.warningNotificationChoice : \"\");\n  const [percentageThreshold, setPercentageThreshold] = useState(notifObj ? notifObj.budgetWarning : 0);\n  const [selectedPercentage, setSelectedPercentage] = useState(0);\n  const [showPercentageDropdown, setShowPercentageDropdown] = useState(false);\n  const [dollarThreshold, setDollarThreshold] = useState(0); // may not need this; calculations could be done in backend\n\n  const [hasSubmittedOnce, setHasSubmittedOnce] = useState(Boolean(localStorage.getItem(`hasSubmittedOnce_${userEmail}`)));\n  const [isEditMode, setIsEditMode] = useState(false); // Track edit mode\n\n  /* function handling user's ability to select multiple notification methods */\n  const handleMethodClick = method => {\n    // adds or removes the selected method from the selectedMethods array\n    // based on whether it was included before or not\n    if (selectedMethods !== null && selectedMethods !== void 0 && selectedMethods.includes(method)) {\n      setSelectedMethods(selectedMethods.filter(c => c !== method));\n      setAllMethods(allMethods.filter(c => c !== method));\n    } else {\n      setSelectedMethods([...selectedMethods, method]);\n      setAllMethods([...allMethods, method]);\n    }\n  };\n\n  /* yes/no dropdown for user's budget limit warning notification choice */\n  const handleWarningNotificationChange = e => {\n    setWarningNotificationChoice(e.target.value);\n    setShowPercentageDropdown(e.target.value === 'Yes');\n    setPercentageThreshold(''); // reset percentageThreshold when the user decides they don't want the notif\n  };\n\n  /* function handling when user submits all of their notification choices, also stores notifObj on FB */\n  const handleSubmit = async () => {\n    setFormSubmitted(true);\n    setHasSubmittedOnce(true);\n\n    // save notification data to FB\n    const notificationData = {\n      email: userEmail,\n      preferredMethod: selectedMethods,\n      notifTime: selectedHour.toString().concat(\" \" + selectedPeriod.toUpperCase()),\n      warningNotificationChoice: warningNotificationChoice,\n      budgetWarning: percentageThreshold\n    };\n    const createBudgetResponse = await post('/createNotification', notificationData);\n    setNotifUpdated(true);\n  };\n\n  /* function handling when user wants to save their edits to their notification choices, also updates notifObj on FB */\n  const handleSave = async () => {\n    setIsEditMode(false);\n    setFormSubmitted(true);\n\n    // save notification data in FB\n    const updatedNotificationData = {\n      email: userEmail,\n      preferredMethod: selectedMethods,\n      notifTime: selectedHour.toString().concat(\" \" + selectedPeriod.toUpperCase()),\n      warningNotificationChoice: warningNotificationChoice,\n      budgetWarning: percentageThreshold\n    };\n    const updateBudgetResponse = await put('/updateNotifications', updatedNotificationData);\n    setNotifUpdated(true);\n  };\n  useEffect(() => {\n    // save hasSubmittedOnce to local storage whenever it changes\n    localStorage.setItem(`hasSubmittedOnce_${userEmail}`, hasSubmittedOnce);\n  }, [hasSubmittedOnce, `hasSubmittedOnce_${userEmail}`]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-container\",\n    children: [hasSubmittedOnce && /*#__PURE__*/_jsxDEV(DisplayNotifications, {\n      warningNotificationChoice: notifObj.warningNotificationChoice,\n      isEditMode: isEditMode,\n      notifObj: notifObj,\n      handleEdit: () => setIsEditMode(!isEditMode),\n      handleSave: handleSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }, this), !hasSubmittedOnce && formSubmitted && !isEditMode && /*#__PURE__*/_jsxDEV(DisplayNotifications, {\n      warningNotificationChoice: notifObj.warningNotificationChoice,\n      isEditMode: isEditMode,\n      notifObj: notifObj,\n      handleEdit: () => setIsEditMode(!isEditMode),\n      handleSave: handleSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }, this), (!hasSubmittedOnce || notifObj && isEditMode) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ManageNotifications\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-method-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Select Notification Method:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"notification-method-buttons\",\n            children: methods.map(method => /*#__PURE__*/_jsxDEV(\"button\", {\n              // className={`notification-method-button${\n              //     ((notifObj.preferredMethod === selectedMethods) ? notifObj?.preferredMethod : selectedMethods).includes(method) ? ' selected' : ''\n              // }`}\n              className: `notification-method-button${selectedMethods.includes(method) ? ' selected' : ''}`,\n              onClick: () => handleMethodClick(method),\n              children: method\n            }, method, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-method-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Select Input Daily Spending Notification Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select-time\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"selectedHour\"\n              // value={(notifObj.notifTime.split(\" \")[0] === selectedHour) ? (notifObj?.notifTime.split(\" \")[0]) : (selectedHour)}\n              ,\n              value: selectedHour,\n              onChange: e => setSelectedHour(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"12\",\n                children: \"12:00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"12:30\",\n                children: \"12:30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"1:00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1:30\",\n                children: \"1:30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"2:00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2:30\",\n                children: \"2:30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"3:00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3:30\",\n                children: \"3:30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"4\",\n                children: \"4:00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"4:30\",\n                children: \"4:30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"5\",\n                children: \"5:00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"5:30\",\n                children: \"5:30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"6\",\n                children: \"6:00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"6:30\",\n                children: \"6:30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"7\",\n                children: \"7:00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"7:30\",\n                children: \"7:30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"8\",\n                children: \"8:00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"8:30\",\n                children: \"8:30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"9\",\n                children: \"9:00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"9:30\",\n                children: \"9:30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"10\",\n                children: \"10:00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"10:30\",\n                children: \"10:30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"11\",\n                children: \"11:00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"11:30\",\n                children: \"11:30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"am-pm\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"selectedPeriod\"\n                // value={(notifObj.notifTime.split(\" \")[1] === selectedPeriod) ? (notifObj?.notifTime.split(\" \")[1]) : (selectedPeriod)}\n                ,\n                value: selectedPeriod,\n                onChange: e => setSelectedPeriod(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select AM/PM\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"AM\",\n                  children: \"AM\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"PM\",\n                  children: \"PM\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-method-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Set Budget Limit Warning Notification?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"warningNotificationChoice\"\n              // value={((notifObj.warningNotificationChoice === warningNotificationChoice) ? notifObj?.warningNotificationChoice : warningNotificationChoice)}\n              ,\n              value: warningNotificationChoice,\n              onChange: handleWarningNotificationChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select an option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Yes\",\n                children: \"Yes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"No\",\n                children: \"No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }, this), showPercentageDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"warning-dropdown\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"percentageThreshold\",\n              children: \"Select a percentage threshold:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"percentageThreshold\"\n              // value={(notifObj.budgetWarning === percentageThreshold) ? notifObj?.budgetWarning : percentageThreshold}\n              ,\n              value: percentageThreshold,\n              onChange: e => setPercentageThreshold(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a percentage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"50\",\n                children: \"50%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"55\",\n                children: \"55%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"60\",\n                children: \"60%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"65\",\n                children: \"65%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"70\",\n                children: \"70%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"75\",\n                children: \"75%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"80\",\n                children: \"80%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"85\",\n                children: \"85%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"90\",\n                children: \"90%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"95\",\n                children: \"95%\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this), !isEditMode ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          type: \"submit\",\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit-button\",\n          onClick: handleSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 22\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n}\n\n/* function displaying the user's previously-inputted notification data (including edit/save buttons) */\n_s(SetNotifications, \"ODFGks1uu0e4SJKp441bM9p9dcU=\");\n_c = SetNotifications;\nfunction DisplayNotifications({\n  notifObj,\n  handleEdit,\n  handleSave,\n  isEditMode\n}) {\n  var _notifObj$preferredMe;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !isEditMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-method-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Selected Notification Method:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-method-buttons\",\n          children: (_notifObj$preferredMe = notifObj.preferredMethod) === null || _notifObj$preferredMe === void 0 ? void 0 : _notifObj$preferredMe.map(method => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"notification-method-button selected\",\n            children: method\n          }, method, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-method-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Selected Input Daily Spending Notification Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: notifObj.notifTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-method-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Selected Budget Limit Warning Notification:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-warning-notif-container\",\n          children: [notifObj.warningNotificationChoice === 'Yes' && /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: [\" \", notifObj.warningNotificationChoice, \", Percentage Threshold: \", notifObj.budgetWarning, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 33\n          }, this), notifObj.warningNotificationChoice === 'No' && /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: notifObj.warningNotificationChoice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"edit-button\",\n        onClick: handleEdit,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 21\n      }, this), isEditMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"edit-button\",\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 17\n    }, this)\n  }, void 0, false);\n}\n_c2 = DisplayNotifications;\nexport default SetNotifications;\nvar _c, _c2;\n$RefreshReg$(_c, \"SetNotifications\");\n$RefreshReg$(_c2, \"DisplayNotifications\");","map":{"version":3,"names":["React","useState","useEffect","auth","post","put","get","jsxDEV","_jsxDEV","Fragment","_Fragment","SetNotifications","_s","_notifObj$notifTime","_notifObj$notifTime2","user","currentUser","userEmail","email","formSubmitted","setFormSubmitted","notifObj","setNotifObj","notifUpdated","setNotifUpdated","fetchNotifData","data","error","console","then","response","log","selectedMethods","setSelectedMethods","allMethods","setAllMethods","methods","selectedHour","setSelectedHour","notifTime","split","selectedMin","setSelectedMin","showMinDropdown","setShowMinDropdown","selectedPeriod","setSelectedPeriod","isOptionEditMode","setIsOptionEditMode","warningNotificationChoice","setWarningNotificationChoice","percentageThreshold","setPercentageThreshold","budgetWarning","selectedPercentage","setSelectedPercentage","showPercentageDropdown","setShowPercentageDropdown","dollarThreshold","setDollarThreshold","hasSubmittedOnce","setHasSubmittedOnce","Boolean","localStorage","getItem","isEditMode","setIsEditMode","handleMethodClick","method","includes","filter","c","handleWarningNotificationChange","e","target","value","handleSubmit","notificationData","preferredMethod","toString","concat","toUpperCase","createBudgetResponse","handleSave","updatedNotificationData","updateBudgetResponse","setItem","className","children","DisplayNotifications","handleEdit","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","id","onChange","htmlFor","type","_c","_notifObj$preferredMe","_c2","$RefreshReg$"],"sources":["/Users/aditi/Desktop/BB_Latest_2.0/BudgetBusters/bb_frontend/src/components/ManageNotifications.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { auth } from \"../firebase\";\nimport {post, put, get} from \"./ApiClient\";\n\n\nfunction SetNotifications() {\n    const user = auth.currentUser;\n    const userEmail = user ? user.email : \"\";\n    const [formSubmitted, setFormSubmitted] = useState(false);\n\n    const [notifObj, setNotifObj] = useState({});\n    const [notifUpdated, setNotifUpdated] = useState(false); // to re-fetch notifications info whenever update happens\n    \n    /* obtaining notification object from user input */\n    useEffect(() => {\n        function fetchNotifData() {\n            let data;\n            try {\n                // Make the GET request to retrieve the budget\n                data = get(`/getNotifications/${userEmail}`)\n            } catch (error) {\n                console.error(\"Error creating or fetching budget:\", error);\n            }\n            return data;\n        }\n\n        fetchNotifData().then((response) => {\n            setNotifObj(response.data);\n        });\n        setNotifUpdated(false)\n        console.log(\"notifObj\", notifObj)\n\n    }, [userEmail, notifUpdated]);\n\n    /* methods of notification */\n    const [selectedMethods, setSelectedMethods] = useState([]);\n    const [allMethods, setAllMethods] = useState([]);\n    const methods = [\"Email\", \"Text\"];\n\n    /* select time */\n    //time\n    const [selectedHour, setSelectedHour] = useState(notifObj ? notifObj.notifTime?.split(\" \")[0] : \"0\");\n    //minute -- no need for this, we will just give them options on the hour (1:00, 2:00, etc.)\n    const [selectedMin, setSelectedMin] = useState(0);\n    const [showMinDropdown, setShowMinDropdown] = useState(false);\n    //am or pm\n    const [selectedPeriod, setSelectedPeriod] = useState(notifObj ? notifObj.notifTime?.split(\" \")[1] : \"\");\n\n    /* options */\n    const [isOptionEditMode, setIsOptionEditMode] = useState(true);\n    const [warningNotificationChoice, setWarningNotificationChoice] = useState(notifObj ? notifObj.warningNotificationChoice : \"\");\n    const [percentageThreshold, setPercentageThreshold] = useState(notifObj ? notifObj.budgetWarning : 0);\n    const [selectedPercentage, setSelectedPercentage] = useState(0);\n    const [showPercentageDropdown, setShowPercentageDropdown] = useState(false);\n    const [dollarThreshold, setDollarThreshold] = useState(0); // may not need this; calculations could be done in backend\n\n    const [hasSubmittedOnce, setHasSubmittedOnce] = useState(Boolean(localStorage.getItem(`hasSubmittedOnce_${userEmail}`)));\n    const [isEditMode, setIsEditMode] = useState(false); // Track edit mode\n\n    /* function handling user's ability to select multiple notification methods */\n    const handleMethodClick = (method) => {\n        // adds or removes the selected method from the selectedMethods array\n        // based on whether it was included before or not\n        if (selectedMethods?.includes(method)) {\n            setSelectedMethods(selectedMethods.filter((c) => c !== method));\n            setAllMethods(allMethods.filter((c) => c !== method));\n        } else {\n            setSelectedMethods([...selectedMethods, method]);\n            setAllMethods([...allMethods, method]);\n        }\n    };\n\n    /* yes/no dropdown for user's budget limit warning notification choice */\n    const handleWarningNotificationChange = (e) => {\n        setWarningNotificationChoice(e.target.value);\n        setShowPercentageDropdown(e.target.value === 'Yes');\n        setPercentageThreshold(''); // reset percentageThreshold when the user decides they don't want the notif\n    };\n\n    /* function handling when user submits all of their notification choices, also stores notifObj on FB */\n    const handleSubmit = async () => {\n        setFormSubmitted(true);\n        setHasSubmittedOnce(true);\n\n        // save notification data to FB\n        const notificationData = {\n            email: userEmail,\n            preferredMethod: selectedMethods,\n            notifTime: selectedHour.toString().concat(\" \" + selectedPeriod.toUpperCase()),\n            warningNotificationChoice: warningNotificationChoice,\n            budgetWarning: percentageThreshold\n        };\n        \n        const createBudgetResponse = await post('/createNotification', notificationData);\n        setNotifUpdated(true);\n    };\n\n    /* function handling when user wants to save their edits to their notification choices, also updates notifObj on FB */\n    const handleSave = async () => {\n        setIsEditMode(false);\n        setFormSubmitted(true);\n\n        // save notification data in FB\n        const updatedNotificationData = {\n            email: userEmail,\n            preferredMethod: selectedMethods,\n            notifTime: selectedHour.toString().concat(\" \" + selectedPeriod.toUpperCase()),\n            warningNotificationChoice: warningNotificationChoice,\n            budgetWarning: percentageThreshold\n        };\n        \n        const updateBudgetResponse = await put('/updateNotifications', updatedNotificationData);\n        setNotifUpdated(true);\n    };\n\n    useEffect(() => {\n        // save hasSubmittedOnce to local storage whenever it changes\n        localStorage.setItem(`hasSubmittedOnce_${userEmail}`, hasSubmittedOnce);\n    }, [hasSubmittedOnce, `hasSubmittedOnce_${userEmail}`]);\n\n    return (\n        <div className=\"notification-container\">\n            {/* condition where user previously submitted their notification form and views the page after a login/redirection */}\n            {hasSubmittedOnce && (\n                <DisplayNotifications\n                    warningNotificationChoice={notifObj.warningNotificationChoice}\n                    isEditMode={isEditMode}\n                    notifObj={notifObj}\n                    handleEdit={() => setIsEditMode(!isEditMode)}\n                    handleSave={handleSave}\n                />\n            )}\n            {/* condition where user submitted their notification form and views the page immediately after clicking the Submit button */}\n            {!hasSubmittedOnce && formSubmitted && !isEditMode && (\n                <DisplayNotifications\n                    warningNotificationChoice={notifObj.warningNotificationChoice}\n                    isEditMode={isEditMode}\n                    notifObj={notifObj}\n                    handleEdit={() => setIsEditMode(!isEditMode)}\n                    handleSave={handleSave}\n                />\n            )}\n            {/* 2 conditions:\n                1. condition where user is submitting their notification form for the first time\n                2. condition where the user clicks on the edit button after submission (pre-populates previous info if it exists) */}\n            {((!hasSubmittedOnce) || (notifObj && isEditMode)) &&  (\n                <>\n                    {/* Choose Notification Method */}\n                    {<div className=\"ManageNotifications\">\n                        <div className=\"notification-method-container\">\n                            <h3>Select Notification Method:</h3>\n                            <div className=\"notification-method-buttons\">\n                                {methods.map((method) => (\n                                    <button\n                                        key={method}\n                                        // className={`notification-method-button${\n                                        //     ((notifObj.preferredMethod === selectedMethods) ? notifObj?.preferredMethod : selectedMethods).includes(method) ? ' selected' : ''\n                                        // }`}\n                                        className={`notification-method-button${selectedMethods.includes(method) ? ' selected' : ''}`}\n                                        onClick={() => handleMethodClick(method)}\n                                    >\n                                        {method}\n                                    </button>\n                                ))}\n                            </div>\n                        </div>\n\n                        {/* Input Daily Notification Time */}\n                        <div className=\"notification-method-container\">\n                            <h3>Select Input Daily Spending Notification Time:</h3>\n                            <div className=\"select-time\">\n                                <select\n                                    id=\"selectedHour\"\n                                    // value={(notifObj.notifTime.split(\" \")[0] === selectedHour) ? (notifObj?.notifTime.split(\" \")[0]) : (selectedHour)}\n                                    value={selectedHour}\n                                    onChange={(e) => setSelectedHour(e.target.value)}\n                                >\n                                    <option value=\"\">Select a time</option>\n                                    <option value=\"12\">12:00</option>\n                                    <option value=\"12:30\">12:30</option>\n                                    <option value=\"1\">1:00</option>\n                                    <option value=\"1:30\">1:30</option>\n                                    <option value=\"2\">2:00</option>\n                                    <option value=\"2:30\">2:30</option>\n                                    <option value=\"3\">3:00</option>\n                                    <option value=\"3:30\">3:30</option>\n                                    <option value=\"4\">4:00</option>\n                                    <option value=\"4:30\">4:30</option>\n                                    <option value=\"5\">5:00</option>\n                                    <option value=\"5:30\">5:30</option>\n                                    <option value=\"6\">6:00</option>\n                                    <option value=\"6:30\">6:30</option>\n                                    <option value=\"7\">7:00</option>\n                                    <option value=\"7:30\">7:30</option>\n                                    <option value=\"8\">8:00</option>\n                                    <option value=\"8:30\">8:30</option>\n                                    <option value=\"9\">9:00</option>\n                                    <option value=\"9:30\">9:30</option>\n                                    <option value=\"10\">10:00</option>\n                                    <option value=\"10:30\">10:30</option>\n                                    <option value=\"11\">11:00</option>\n                                    <option value=\"11:30\">11:30</option>\n                                </select>\n                                <div className=\"am-pm\">\n                                    <select\n                                        id=\"selectedPeriod\"\n                                        // value={(notifObj.notifTime.split(\" \")[1] === selectedPeriod) ? (notifObj?.notifTime.split(\" \")[1]) : (selectedPeriod)}\n                                        value={selectedPeriod}\n                                        onChange={(e) => setSelectedPeriod(e.target.value)}\n                                    >\n                                        <option value=\"\">Select AM/PM</option>\n                                        <option value=\"AM\">AM</option>\n                                        <option value=\"PM\">PM</option>\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n\n                        {/* Choose whether user wants Budget Limit Warning notification */}\n                        <div className=\"notification-method-container\">\n                            <h3>Set Budget Limit Warning Notification?</h3>\n                            <div>\n                                <select\n                                    id=\"warningNotificationChoice\"\n                                    // value={((notifObj.warningNotificationChoice === warningNotificationChoice) ? notifObj?.warningNotificationChoice : warningNotificationChoice)}\n                                    value={warningNotificationChoice}\n                                    onChange={handleWarningNotificationChange}\n                                >\n                                    <option value=\"\">Select an option</option>\n                                    <option value=\"Yes\">Yes</option>\n                                    <option value=\"No\">No</option>\n                                </select>\n                            </div>\n\n                            {/* If user wants Budget Limit Warning Notification, user can choose percentage */}\n                            {showPercentageDropdown && (\n                                <div className=\"warning-dropdown\">\n                                    <label htmlFor=\"percentageThreshold\">Select a percentage threshold:</label>\n                                    <select\n                                        id=\"percentageThreshold\"\n                                        // value={(notifObj.budgetWarning === percentageThreshold) ? notifObj?.budgetWarning : percentageThreshold}\n                                        value={percentageThreshold}\n                                        onChange={(e) => setPercentageThreshold(e.target.value)}\n                                    >\n                                        <option value=\"\">Select a percentage</option>\n                                        <option value=\"50\">50%</option>\n                                        <option value=\"55\">55%</option>\n                                        <option value=\"60\">60%</option>\n                                        <option value=\"65\">65%</option>\n                                        <option value=\"70\">70%</option>\n                                        <option value=\"75\">75%</option>\n                                        <option value=\"80\">80%</option>\n                                        <option value=\"85\">85%</option>\n                                        <option value=\"90\">90%</option>\n                                        <option value=\"95\">95%</option>\n                                    </select>\n                                </div>\n                            )}\n                        </div>\n\n                        {/*Conditionally renders Submit/Save button depending on if user is in edit mode*/}\n                        {!isEditMode ? (\n                            <button\n                                className=\"submit-button\"\n                                type=\"submit\"\n                                onClick={handleSubmit}\n                            >\n                                Submit\n                            </button>\n                        ) : (\n                            <button className=\"edit-button\" onClick={handleSave}>\n                                Save\n                            </button>\n                        )}\n                    </div>}\n                </>\n            )}\n        </div>\n    );\n}\n\n/* function displaying the user's previously-inputted notification data (including edit/save buttons) */\nfunction DisplayNotifications({ notifObj, handleEdit, handleSave, isEditMode }) {\n    return (\n        <>\n            {!isEditMode && (\n                <div className=\"notification-container\">\n                    <div className=\"notification-method-container\">\n                        <h3>Selected Notification Method:</h3>\n                        <div className=\"notification-method-buttons\">\n                            {notifObj.preferredMethod?.map((method) => (\n                                <button\n                                    key={method}\n                                    className=\"notification-method-button selected\"\n                                >\n                                    {method}\n                                </button>\n                            ))}\n                        </div>\n                    </div>\n\n                    <div className=\"notification-method-container\">\n                        <h3>Selected Input Daily Spending Notification Time:</h3>\n                        <div>\n                            <h5>{notifObj.notifTime}</h5>\n                        </div>\n                    </div>\n\n                    <div className=\"notification-method-container\">\n                        <h3>Selected Budget Limit Warning Notification:</h3>\n                        <div className=\"selected-warning-notif-container\">\n                            {notifObj.warningNotificationChoice === 'Yes' && (\n                                <h5> {notifObj.warningNotificationChoice}, Percentage\n                                    Threshold: {notifObj.budgetWarning}%</h5>\n                            )}\n                            {notifObj.warningNotificationChoice === 'No' && (\n                                <h5>{notifObj.warningNotificationChoice}</h5>\n                            )}\n                        </div>\n                    </div>\n\n                    <button className=\"edit-button\" onClick={handleEdit}>\n                        Edit\n                    </button>\n\n                    {isEditMode && (\n                        <button className=\"edit-button\" onClick={handleSave}>\n                            Save\n                        </button>\n                    )}\n                </div>\n            )}\n        </>\n    );\n}\n\n\n\nexport default SetNotifications;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}