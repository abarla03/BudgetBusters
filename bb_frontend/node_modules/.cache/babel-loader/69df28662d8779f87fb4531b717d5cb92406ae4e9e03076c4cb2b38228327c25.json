{"ast":null,"code":"var _jsxFileName = \"/Users/aditi/Desktop/BB_Latest_2.0/BudgetBusters/bb_frontend/src/components/GoogleSignUpButton.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { signInWithGoogle } from '../firebase';\nimport { useNavigate } from 'react-router-dom';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleSignUpButton = () => {\n  _s();\n  const navigate = useNavigate();\n  const handleSignIn = async () => {\n    try {\n      await signInWithGoogle();\n      // Redirect to '/home' after successful sign-in\n\n      // should we immediately navigate to login\n      // should we wait to display a message then navigate to login - yee\n      //const delayInMS = 2000;\n      // setTimeout(() => {\n      //     console.log(\"Success! You were able to sign up using Google!\")\n      //     console.log(\"navigate after a few seconds to display success message\");\n      //     navigate('/login');\n      // }, delayInMS);\n      // should we not navigate anywhere, and just let the user press login?\n      navigate('/home');\n    } catch (error) {\n      console.error('Error signing in with Google:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"google-auth-btn\",\n    onClick: handleSignIn,\n    children: \"Sign up with Google\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(GoogleSignUpButton, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = GoogleSignUpButton;\nexport default GoogleSignUpButton;\nvar _c;\n$RefreshReg$(_c, \"GoogleSignUpButton\");","map":{"version":3,"names":["React","signInWithGoogle","useNavigate","jsxDEV","_jsxDEV","GoogleSignUpButton","_s","navigate","handleSignIn","error","console","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/aditi/Desktop/BB_Latest_2.0/BudgetBusters/bb_frontend/src/components/GoogleSignUpButton.js"],"sourcesContent":["import React from 'react';\nimport { signInWithGoogle } from '../firebase';\nimport { useNavigate } from 'react-router-dom';\nimport '../App.css'\n\nconst GoogleSignUpButton = () => {\n\n    const navigate = useNavigate();\n\n    const handleSignIn = async () => {\n        try {\n            await signInWithGoogle();\n            // Redirect to '/home' after successful sign-in\n\n\n            // should we immediately navigate to login\n            // should we wait to display a message then navigate to login - yee\n            //const delayInMS = 2000;\n            // setTimeout(() => {\n            //     console.log(\"Success! You were able to sign up using Google!\")\n            //     console.log(\"navigate after a few seconds to display success message\");\n            //     navigate('/login');\n            // }, delayInMS);\n            // should we not navigate anywhere, and just let the user press login?\n            navigate('/home');\n        } catch (error) {\n            console.error('Error signing in with Google:', error);\n        }\n    };\n\n    return (\n        <button className = \"google-auth-btn\" onClick={handleSignIn}>\n            Sign up with Google\n        </button>\n    );\n};\n\n\n\nexport default GoogleSignUpButton;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAQ,aAAa;AAC9C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE7B,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9B,MAAMM,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAMP,gBAAgB,CAAC,CAAC;MACxB;;MAGA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAM,QAAQ,CAAC,OAAO,CAAC;IACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACzD;EACJ,CAAC;EAED,oBACIL,OAAA;IAAQO,SAAS,EAAG,iBAAiB;IAACC,OAAO,EAAEJ,YAAa;IAAAK,QAAA,EAAC;EAE7D;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEjB,CAAC;AAACX,EAAA,CA9BID,kBAAkB;EAAA,QAEHH,WAAW;AAAA;AAAAgB,EAAA,GAF1Bb,kBAAkB;AAkCxB,eAAeA,kBAAkB;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}