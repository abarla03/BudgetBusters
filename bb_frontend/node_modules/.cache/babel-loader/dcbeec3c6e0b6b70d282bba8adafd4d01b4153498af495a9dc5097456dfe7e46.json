{"ast":null,"code":"var _jsxFileName = \"/Users/aditi/Desktop/BB_Latest_2.0/BudgetBusters/bb_frontend/src/components/auth/Register.jsx\",\n  _s = $RefreshSig$();\nimport { createUserWithEmailAndPassword, sendEmailVerification } from \"firebase/auth\";\nimport React, { useEffect, useState } from 'react';\nimport { auth } from \"../../firebase\";\nimport { signInWithGoogle } from \"../../firebase\";\nimport logo from \"../../BBLogo.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport GoogleSignInButton from '../GoogleSignInButton';\nimport GoogleSignUpButton from \"../GoogleSignUpButton\";\nimport * as currentUser from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = props => {\n  _s();\n  const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState(' ');\n  const [age, setAge] = useState(' ');\n  const [phoneNumber, setPhoneNumber] = useState(' ');\n  const [displayMessage, setDisplayMessage] = useState('');\n  //const [nameError, setNameError] = useState(null);\n  const [googleUserData, setGoogleUserData] = useState({\n    name: '',\n    email: '',\n    phoneNumber: ''\n  });\n  const signInWithGoogleHandler = () => {\n    signInWithGoogle().then(() => {\n      // After successful sign-in with Google, navigate to the '/home' route\n      //navigate('/home');\n    }).catch(error => {\n      // implement UI message logic here too!\n      console.log(error);\n    });\n  };\n  const showMessage = error => {\n    if (error && error.message) {\n      // handle firebase errors\n      //setDisplayMessage(true);\n      const match = error.message.match(/\\(([^)]+)\\)/);\n      //const errorCode = match ? match[1] : null;\n\n      switch (error.message.match(/\\(([^)]+)\\)/)[1]) {\n        // diff firebase errors:\n        case 'auth/missing-password':\n          setDisplayMessage(\"Please enter your password!\");\n          break;\n        case 'auth/missing-email':\n          setDisplayMessage(\"Please enter your email!\");\n          break;\n        case 'Please enter your name!':\n          // missing name field\n          setDisplayMessage(\"Please enter your name!\");\n          break;\n        case 'auth/email-already-in-use':\n          setDisplayMessage(\"You already have an account associated with this email, please log in!\");\n          break;\n        case 'auth/weak-password':\n          setDisplayMessage(\"Password is too weak. Must be at least 6 characters.\");\n          break;\n        default:\n          setDisplayMessage(\"An error occurred. Please try again.\");\n      }\n    } else {\n      // non-firebase errors/messages\n      // check for success message:\n      if (error === \"You have successfully created an account!\") {\n        setDisplayMessage(error);\n      } else if (error === \"Please enter your name!\") {\n        setDisplayMessage(error);\n      } else {\n        setDisplayMessage(\"An error occurred. Please try again.\");\n      }\n    }\n  };\n\n  /* DON'T NEED THIS ANYMORE - populate register input fields with applicable Google account info */\n  // const populateGoogleUserData = () => {\n  //     // fix current population bug\n  //     const googleUserData = JSON.parse(localStorage.getItem(\"googleUserData\")) || {};\n  //     setName(googleUserData.name);\n  //     setEmail(googleUserData.email);\n  //     setPhoneNumber(googleUserData.phoneNumber);\n  //     /* add in other relevant fields */\n  // }\n\n  // /* call the appropriate method to populate fields */\n  // useEffect (() => {\n  //     populateGoogleUserData();\n  // }, []);\n\n  /* send confirmation email */\n  const registerSubmit = e => {\n    // todo: sign in\n\n    e.preventDefault();\n    if (name.length < 1) {\n      console.log(\"no name!\");\n      const nameError = \"Please enter your name!\";\n      showMessage(nameError);\n      return;\n    }\n\n    // e.preventDefault();\n    createUserWithEmailAndPassword(auth, email, password).then(userCredential => {\n      console.log(userCredential);\n      //console.log('no actual error'); // THIS IS WHERE SUCCESSFUL LOGIN MESSAGE GOES\n      const successMessage = \"You have successfully created an account!\";\n      console.log(successMessage);\n      window.alert(\"You have successfully created an account!\");\n      navigate('/login');\n      //showMessage(successMessage);\n      //showMessage(\"You have successfully created an account!\");\n    }).catch(error => {\n      console.log(`showing the firebase error ${error}`);\n      showMessage(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"register-form\",\n      onSubmit: registerSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Full Name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: googleUserData.name !== '' ? googleUserData.name : name,\n        onChange: e => setName(e.target.value),\n        type: \"text\",\n        id: \"name\",\n        placeholder: \"Full Name\",\n        name: \"Full Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        type: \"email\",\n        placeholder: \"email@emailprovider.com\",\n        id: \"email\",\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        type: \"password\",\n        placeholder: \"enter password\",\n        id: \"password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        onClick: registerSubmit,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: displayMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"link-btn\",\n      onClick: () => navigate('/login'),\n      children: \"Already have an account? Login here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GoogleSignUpButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n};\n_s(Register, \"R3LQEi1dhMOhUOW1psdEKQmS5q0=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["createUserWithEmailAndPassword","sendEmailVerification","React","useEffect","useState","auth","signInWithGoogle","logo","useNavigate","GoogleSignInButton","GoogleSignUpButton","currentUser","jsxDEV","_jsxDEV","Register","props","_s","navigate","name","setName","password","setPassword","email","setEmail","age","setAge","phoneNumber","setPhoneNumber","displayMessage","setDisplayMessage","googleUserData","setGoogleUserData","signInWithGoogleHandler","then","catch","error","console","log","showMessage","message","match","registerSubmit","e","preventDefault","length","nameError","userCredential","successMessage","window","alert","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","value","onChange","target","type","id","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/aditi/Desktop/BB_Latest_2.0/BudgetBusters/bb_frontend/src/components/auth/Register.jsx"],"sourcesContent":["import { createUserWithEmailAndPassword, sendEmailVerification } from \"firebase/auth\";\nimport React, { useEffect, useState } from 'react';\nimport { auth } from \"../../firebase\";\nimport { signInWithGoogle } from \"../../firebase\";\nimport logo from \"../../BBLogo.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport GoogleSignInButton from '../GoogleSignInButton';\nimport GoogleSignUpButton from \"../GoogleSignUpButton\";\nimport * as currentUser from \"firebase/auth\";\nconst Register = (props) => {\n    const navigate = useNavigate();\n    const [name, setName ] = useState('');\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState(' ');\n    const [age, setAge] = useState(' ');\n    const [phoneNumber, setPhoneNumber] = useState(' ');\n    const [displayMessage, setDisplayMessage] = useState('');\n    //const [nameError, setNameError] = useState(null);\n    const [googleUserData, setGoogleUserData] = useState({\n        name: '',\n        email: '',\n        phoneNumber: ''\n    })\n\n    const signInWithGoogleHandler = () => {\n        signInWithGoogle()\n            .then(() => {\n                // After successful sign-in with Google, navigate to the '/home' route\n                //navigate('/home');\n\n            })\n            .catch((error) => {\n                // implement UI message logic here too!\n                console.log(error);\n            });\n    };\n\n    const showMessage = (error) => {\n\n\n        if (error && error.message) {\n            // handle firebase errors\n            //setDisplayMessage(true);\n            const match = error.message.match(/\\(([^)]+)\\)/);\n            //const errorCode = match ? match[1] : null;\n\n            switch (error.message.match(/\\(([^)]+)\\)/)[1]) {\n                // diff firebase errors:\n                case 'auth/missing-password':\n                    setDisplayMessage(\"Please enter your password!\");\n                    break;\n\n                case 'auth/missing-email':\n                    setDisplayMessage(\"Please enter your email!\");\n                    break;\n\n                case 'Please enter your name!': // missing name field\n                    setDisplayMessage(\"Please enter your name!\");\n                    break;\n\n                case 'auth/email-already-in-use':\n                    setDisplayMessage(\"You already have an account associated with this email, please log in!\");\n                    break;\n\n                case 'auth/weak-password':\n                    setDisplayMessage(\"Password is too weak. Must be at least 6 characters.\");\n                    break;\n\n                default:\n                    setDisplayMessage(\"An error occurred. Please try again.\");\n            }\n        } else {\n            // non-firebase errors/messages\n            // check for success message:\n            if (error === \"You have successfully created an account!\") {\n                setDisplayMessage(error);\n            } else if (error === \"Please enter your name!\" ) {\n                setDisplayMessage(error);\n            } else {\n                setDisplayMessage(\"An error occurred. Please try again.\");\n            }\n        }\n    };\n\n    /* DON'T NEED THIS ANYMORE - populate register input fields with applicable Google account info */\n    // const populateGoogleUserData = () => {\n    //     // fix current population bug\n    //     const googleUserData = JSON.parse(localStorage.getItem(\"googleUserData\")) || {};\n    //     setName(googleUserData.name);\n    //     setEmail(googleUserData.email);\n    //     setPhoneNumber(googleUserData.phoneNumber);\n    //     /* add in other relevant fields */\n    // }\n\n    // /* call the appropriate method to populate fields */\n    // useEffect (() => {\n    //     populateGoogleUserData();\n    // }, []);\n\n    /* send confirmation email */\n    const registerSubmit = (e) => {\n        // todo: sign in\n\n        e.preventDefault();\n\n        if (name.length < 1) {\n            console.log(\"no name!\");\n            const nameError = \"Please enter your name!\";\n            showMessage(nameError);\n            return;\n        }\n\n            // e.preventDefault();\n        createUserWithEmailAndPassword(auth, email, password)\n\n            .then((userCredential) => {\n                console.log(userCredential);\n                //console.log('no actual error'); // THIS IS WHERE SUCCESSFUL LOGIN MESSAGE GOES\n                const successMessage = \"You have successfully created an account!\";\n                console.log(successMessage);\n                window.alert(\"You have successfully created an account!\");\n                navigate('/login')\n                //showMessage(successMessage);\n                //showMessage(\"You have successfully created an account!\");\n            })\n            .catch((error) => {\n                console.log(`showing the firebase error ${error}`);\n                showMessage(error);\n            })\n    }\n\n\n    return (\n        <div className=\"auth-form-container\">\n\n            <form className=\"register-form\" onSubmit={registerSubmit}>\n                <h2>Register</h2>\n                <label htmlFor=\"name\">Full Name </label>\n\n                <input value={googleUserData.name !== '' ? googleUserData.name : name} onChange={(e) => setName(e.target.value)}type=\"text\" id=\"name\" placeholder=\"Full Name\" name=\"Full Name\" />\n\n                <label htmlFor=\"email\">Email</label>\n                <input value={email} onChange={(e) => setEmail(e.target.value)}type=\"email\" placeholder=\"email@emailprovider.com\" id=\"email\" name=\"email\" />\n\n                <label htmlFor=\"password\">Password</label>\n                <input value={password} onChange={(e) => setPassword(e.target.value)}type=\"password\" placeholder=\"enter password\" id=\"password\" name=\"password\" />\n\n                {/* incorporate logic for success/error messages in handle click/ showMessage method?*/}\n                <button type=\"submit\" onClick = { registerSubmit }>Register</button>\n\n                {<p>{displayMessage}</p>}\n\n            </form>\n            <button className=\"link-btn\" onClick={() => navigate('/login')}>Already have an account? Login here.</button>\n            <GoogleSignUpButton/>\n\n        </div>\n    )\n}\n\nexport default Register\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}