{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAQWnf1tw2KR3jZa-wcisYq3GC7oHX9meo\",\n  authDomain: \"auth-practice-51fe0.firebaseapp.com\",\n  projectId: \"auth-practice-51fe0\",\n  storageBucket: \"auth-practice-51fe0.appspot.com\",\n  messagingSenderId: \"822077407630\",\n  appId: \"1:822077407630:web:956275c10ca5ce3e7e64df\"\n};\n\n// Initialize Firebase - represents our Firebase connection\nconst app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nconst provider = new GoogleAuthProvider();\n\n// export const signInWithGoogle = () =>  signInWithPopup(auth, provider);\n// refer back to video on how to reorganize this when used multiple times\n\nexport const signInWithGoogle = () => {\n  signInWithPopup(auth, provider).then(result => {\n    console.log(result);\n    // result object contains a lot of info about the user:\n    // email, display name, photoURL\n    const name = result.user.displayName;\n    const email = result.user.email;\n    const profilePic = result.user.photoURL;\n    // create phone number var\n\n    localStorage.setItem(\"name\", name);\n    localStorage.setItem(\"email\", email);\n    localStorage.setItem(\"profilePic\", profilePic);\n    localStorage.setItem(\"phone\", profilePic);\n  }).catch(error => {\n    console.log(error);\n  });\n};","map":{"version":3,"names":["initializeApp","getAuth","GoogleAuthProvider","signInWithPopup","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","auth","provider","signInWithGoogle","then","result","console","log","name","user","displayName","email","profilePic","photoURL","localStorage","setItem","catch","error"],"sources":["C:/Users/sarah/budget-busters/FE/react-fb-google-auth/google-auth/src/Firebase.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\n\r\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from 'firebase/auth'\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAQWnf1tw2KR3jZa-wcisYq3GC7oHX9meo\",\r\n  authDomain: \"auth-practice-51fe0.firebaseapp.com\",\r\n  projectId: \"auth-practice-51fe0\",\r\n  storageBucket: \"auth-practice-51fe0.appspot.com\",\r\n  messagingSenderId: \"822077407630\",\r\n  appId: \"1:822077407630:web:956275c10ca5ce3e7e64df\"\r\n};\r\n\r\n// Initialize Firebase - represents our Firebase connection\r\nconst app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app);\r\n\r\nconst provider = new GoogleAuthProvider();\r\n\r\n// export const signInWithGoogle = () =>  signInWithPopup(auth, provider);\r\n// refer back to video on how to reorganize this when used multiple times\r\n\r\nexport const signInWithGoogle = () => {\r\n    signInWithPopup(auth, provider)\r\n    .then((result) => {\r\n        console.log(result);\r\n        // result object contains a lot of info about the user:\r\n        // email, display name, photoURL\r\n        const name = result.user.displayName;\r\n        const email = result.user.email;\r\n        const profilePic = result.user.photoURL;\r\n        // create phone number var\r\n\r\n        localStorage.setItem(\"name\", name);\r\n        localStorage.setItem(\"email\", email);\r\n        localStorage.setItem(\"profilePic\", profilePic);\r\n        localStorage.setItem(\"phone\", profilePic);\r\n\r\n    }).catch((error) => {\r\n        console.log(error);\r\n    });\r\n}"],"mappings":"AAAA;AACA,SAASA,aAAa,QAAQ,cAAc;AAE5C,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,eAAe,QAAQ,eAAe;AAC5E;AACA;;AAEA;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,qCAAqC;EACjDC,SAAS,EAAE,qBAAqB;EAChCC,aAAa,EAAE,iCAAiC;EAChDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,MAAMC,GAAG,GAAGX,aAAa,CAACI,cAAc,CAAC;AACzC,OAAO,MAAMQ,IAAI,GAAGX,OAAO,CAACU,GAAG,CAAC;AAEhC,MAAME,QAAQ,GAAG,IAAIX,kBAAkB,CAAC,CAAC;;AAEzC;AACA;;AAEA,OAAO,MAAMY,gBAAgB,GAAGA,CAAA,KAAM;EAClCX,eAAe,CAACS,IAAI,EAAEC,QAAQ,CAAC,CAC9BE,IAAI,CAAEC,MAAM,IAAK;IACdC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnB;IACA;IACA,MAAMG,IAAI,GAAGH,MAAM,CAACI,IAAI,CAACC,WAAW;IACpC,MAAMC,KAAK,GAAGN,MAAM,CAACI,IAAI,CAACE,KAAK;IAC/B,MAAMC,UAAU,GAAGP,MAAM,CAACI,IAAI,CAACI,QAAQ;IACvC;;IAEAC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEP,IAAI,CAAC;IAClCM,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;IACpCG,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEH,UAAU,CAAC;IAC9CE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,UAAU,CAAC;EAE7C,CAAC,CAAC,CAACI,KAAK,CAAEC,KAAK,IAAK;IAChBX,OAAO,CAACC,GAAG,CAACU,KAAK,CAAC;EACtB,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}